{"remainingRequest":"/Users/diiru/Desktop/Vue_Forms/node_modules/babel-loader/lib/index.js!/Users/diiru/Desktop/Vue_Forms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/diiru/Desktop/Vue_Forms/src/components/FormUserDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/diiru/Desktop/Vue_Forms/src/components/FormUserDetails.vue","mtime":1546459294593},{"path":"/Users/diiru/Desktop/Vue_Forms/node_modules/cache-loader/dist/cjs.js","mtime":1546457431745},{"path":"/Users/diiru/Desktop/Vue_Forms/node_modules/babel-loader/lib/index.js","mtime":1546457429293},{"path":"/Users/diiru/Desktop/Vue_Forms/node_modules/vue-loader/lib/index.js","mtime":1546457431979}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, email } from 'vuelidate/lib/validators';\nexport default {\n  data: function data() {\n    return {\n      form: {\n        email: null,\n        password: null,\n        name: null\n      }\n    };\n  },\n  validations: {\n    form: {\n      email: {\n        required: required,\n        email: email\n      },\n      password: {\n        required: required\n      },\n      name: {\n        required: required\n      }\n    }\n  },\n  methods: {\n    submit: function submit() {\n      if (!this.$v.$invalid) {\n        this.$emit('update', {\n          email: this.form.email,\n          password: this.form.password,\n          name: this.form.name\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["FormUserDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,SAAA,QAAA,EAAA,KAAA,QAAA,0BAAA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA;AACA,eAAA,IADA;AAEA,kBAAA,IAFA;AAGA,cAAA;AAHA;AADA,KAAA;AAOA,GATA;AAUA,eAAA;AACA,UAAA;AACA,aAAA;AACA,0BADA;AAEA;AAFA,OADA;AAKA,gBAAA;AACA;AADA,OALA;AAQA,YAAA;AACA;AADA;AARA;AADA,GAVA;AAwBA,WAAA;AACA,UADA,oBACA;AACA,UAAA,CAAA,KAAA,EAAA,CAAA,QAAA,EAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA;AACA,iBAAA,KAAA,IAAA,CAAA,KADA;AAEA,oBAAA,KAAA,IAAA,CAAA,QAFA;AAGA,gBAAA,KAAA,IAAA,CAAA;AAHA,SAAA;AAKA;AACA;AATA;AAxBA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1 class=\"title\">Create Account</h1>\n\n    <h2 class=\"subtitle\">\n      Create an account or log in to order your liquid gold subscription\n    </h2>\n\n    <form @input=\"submit\" class=\"form\">\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"email\">Email</label>\n        <input type=\"text\" v-model=\"$v.form.email.$model\" placeholder=\"your@email.com\" class=\"form-control\" id=\"email\">\n        <div v-if=\"$v.form.email.$error && !$v.form.email.required\" class=\"error\">email is required</div>\n        <div v-if=\"$v.form.email.$error && !$v.form.email.email\" class=\"error\">email is invalid</div>\n      </div>\n\n\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"password\">Password</label>\n        <input v-model=\"$v.form.password.$model\" type=\"password\" placeholder=\"Super Secret Password\" class=\"form-control\" id=\"password\">\n        <div v-if=\"$v.form.password.$error && !$v.form.password.required\" class=\"error\">password is required</div>\n      </div>\n\n\n      <div class=\"form-group\">\n        <label class=\"form-label\" for=\"name\">Name</label>\n        <input v-model=\"$v.form.name.$model\" type=\"text\" placeholder=\"What should we call you?\" class=\"form-control\" id=\"name\">\n        <div v-if=\"$v.form.name.$error\" class=\"error\">name is required</div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n  import {required, email} from 'vuelidate/lib/validators'\n  export default {\n    data () {\n      return {\n        form: {\n          email: null,\n          password: null,\n          name: null,\n        }\n      }\n    },\n    validations: {\n      form: {\n        email: {\n          required,\n          email\n        },\n        password: {\n          required\n        },\n        name: {\n          required\n        }\n      }\n    },\n    methods: {\n      submit () {\n        if (!this.$v.$invalid) {\n          this.$emit('update', {\n            email: this.form.email,\n            password: this.form.password,\n            name: this.form.name\n          })\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}