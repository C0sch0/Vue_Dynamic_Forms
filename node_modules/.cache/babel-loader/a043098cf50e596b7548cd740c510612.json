{"remainingRequest":"/Users/diiru/Desktop/Vue_Forms/node_modules/babel-loader/lib/index.js!/Users/diiru/Desktop/Vue_Forms/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/diiru/Desktop/Vue_Forms/src/components/FormWizard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/diiru/Desktop/Vue_Forms/src/components/FormWizard.vue","mtime":1547148175703},{"path":"/Users/diiru/Desktop/Vue_Forms/node_modules/cache-loader/dist/cjs.js","mtime":1546457431745},{"path":"/Users/diiru/Desktop/Vue_Forms/node_modules/babel-loader/lib/index.js","mtime":1546457429293},{"path":"/Users/diiru/Desktop/Vue_Forms/node_modules/vue-loader/lib/index.js","mtime":1546457431979}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { postFormToDB } from '../api';\nimport FormPlanPicker from './FormPlanPicker';\nimport FormUserDetails from './FormUserDetails';\nimport FormAddress from './FormAddress';\nimport FormReviewOrder from './FormReviewOrder';\nexport default {\n  name: 'FormWizard',\n  components: {\n    FormPlanPicker: FormPlanPicker,\n    FormUserDetails: FormUserDetails,\n    FormAddress: FormAddress,\n    FormReviewOrder: FormReviewOrder\n  },\n  data: function data() {\n    return {\n      currentStepNumber: 1,\n      canGoNext: false,\n      asyncState: null,\n      steps: ['FormPlanPicker', 'FormUserDetails', 'FormAddress', 'FormReviewOrder'],\n      form: {\n        plan: null,\n        email: null,\n        name: null,\n        password: null,\n        address: null,\n        recipient: null,\n        chocolate: false,\n        otherTreat: false\n      }\n    };\n  },\n  computed: {\n    isLastStep: function isLastStep() {\n      return this.currentStepNumber === this.length;\n    },\n    wizardInProgress: function wizardInProgress() {\n      return this.currentStepNumber <= this.length;\n    },\n    length: function length() {\n      return this.steps.length;\n    },\n    currentStep: function currentStep() {\n      return this.steps[this.currentStepNumber - 1];\n    },\n    progress: function progress() {\n      return this.currentStepNumber / this.length * 100;\n    }\n  },\n  methods: {\n    submitOrder: function submitOrder() {\n      var _this = this;\n\n      this.asyncState = 'pending';\n      postFormToDB(this.form).then(function () {\n        console.log('form submitted', _this.form);\n        _this.asyncState = 'success';\n        _this.currentStepNumber++;\n      });\n    },\n    nextButtonAction: function nextButtonAction() {\n      if (this.isLastStep) {\n        this.submitOrder();\n      } else {\n        this.goNext();\n      }\n    },\n    processStep: function processStep(step) {\n      Object.assign(this.form, step.data);\n      this.canGoNext = step.valid;\n    },\n    goBack: function goBack() {\n      this.currentStepNumber--;\n      this.canGoNext = true;\n    },\n    goNext: function goNext() {\n      var _this2 = this;\n\n      this.currentStepNumber++; // this.canGoNext = false\n\n      this.$nextTick(function () {\n        _this2.canGoNext = !_this2.$refs.currentStep.$v.$invalid;\n      });\n    }\n  }\n};",{"version":3,"sources":["FormWizard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,YAAA,QAAA,QAAA;AACA,OAAA,cAAA,MAAA,kBAAA;AACA,OAAA,eAAA,MAAA,mBAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,eAAA,MAAA,mBAAA;AAEA,eAAA;AACA,QAAA,YADA;AAEA,cAAA;AACA,kCADA;AAEA,oCAFA;AAGA,4BAHA;AAIA;AAJA,GAFA;AAQA,MARA,kBAQA;AACA,WAAA;AACA,yBAAA,CADA;AAEA,iBAAA,KAFA;AAGA,kBAAA,IAHA;AAIA,aAAA,CACA,gBADA,EAEA,iBAFA,EAGA,aAHA,EAIA,iBAJA,CAJA;AAUA,YAAA;AACA,cAAA,IADA;AAEA,eAAA,IAFA;AAGA,cAAA,IAHA;AAIA,kBAAA,IAJA;AAKA,iBAAA,IALA;AAMA,mBAAA,IANA;AAOA,mBAAA,KAPA;AAQA,oBAAA;AARA;AAVA,KAAA;AAqBA,GA9BA;AA+BA,YAAA;AACA,cADA,wBACA;AACA,aAAA,KAAA,iBAAA,KAAA,KAAA,MAAA;AACA,KAHA;AAIA,oBAJA,8BAIA;AACA,aAAA,KAAA,iBAAA,IAAA,KAAA,MAAA;AACA,KANA;AAOA,UAPA,oBAOA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA;AACA,KATA;AAUA,eAVA,yBAUA;AACA,aAAA,KAAA,KAAA,CAAA,KAAA,iBAAA,GAAA,CAAA,CAAA;AACA,KAZA;AAaA,YAbA,sBAaA;AACA,aAAA,KAAA,iBAAA,GAAA,KAAA,MAAA,GAAA,GAAA;AACA;AAfA,GA/BA;AAgDA,WAAA;AACA,eADA,yBACA;AAAA;;AACA,WAAA,UAAA,GAAA,SAAA;AACA,mBAAA,KAAA,IAAA,EACA,IADA,CACA,YAAA;AACA,gBAAA,GAAA,CAAA,gBAAA,EAAA,MAAA,IAAA;AACA,cAAA,UAAA,GAAA,SAAA;AACA,cAAA,iBAAA;AACA,OALA;AAMA,KATA;AAUA,oBAVA,8BAUA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,aAAA,WAAA;AACA,OAFA,MAEA;AACA,aAAA,MAAA;AACA;AACA,KAhBA;AAiBA,eAjBA,uBAiBA,IAjBA,EAiBA;AACA,aAAA,MAAA,CAAA,KAAA,IAAA,EAAA,KAAA,IAAA;AACA,WAAA,SAAA,GAAA,KAAA,KAAA;AACA,KApBA;AAqBA,UArBA,oBAqBA;AACA,WAAA,iBAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA,KAxBA;AAyBA,UAzBA,oBAyBA;AAAA;;AACA,WAAA,iBAAA,GADA,CAEA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,eAAA,SAAA,GAAA,CAAA,OAAA,KAAA,CAAA,WAAA,CAAA,EAAA,CAAA,QAAA;AACA,OAFA;AAGA;AA/BA;AAhDA,CAAA","sourcesContent":["<template>\n  <div>\n    <div v-if=\"wizardInProgress\" v-show=\"asyncState !== 'pending'\">\n      <keep-alive>\n        <component\n                ref=\"currentStep\"\n                :is=\"currentStep\"\n                @update=\"processStep\"\n                :wizard-data=\"form\"\n        ></component>\n      </keep-alive>\n\n      <div class=\"progress-bar\">\n        <div :style=\"`width: ${progress}%;`\"></div>\n      </div>\n\n      <!-- Actions -->\n      <div class=\"buttons\">\n        <button\n                @click=\"goBack\"\n                v-if=\"currentStepNumber > 1\"\n                class=\"btn-outlined\"\n        >Back\n        </button>\n\n        <button\n                @click=\"nextButtonAction\"\n                :disabled=\"!canGoNext\"\n                class=\"btn\"\n        >{{isLastStep ? 'Complete Order' : 'Next'}}</button>\n      </div>\n    </div>\n\n    <div v-else>\n      <h1 class=\"title\">Thank you!</h1>\n      <h2 class=\"subtitle\">\n        Estamos ansiosos por ayudarte a invertir !\n      </h2>\n\n      <p class=\"text-center\">\n        <a href=\"https://vueschool.io\" target=\"_blank\" class=\"btn\">Go somewhere cool!</a>\n      </p>\n    </div>\n\n    <div class=\"loading-wrapper\" v-if=\"asyncState === 'pending'\">\n      <div class=\"loader\">\n        <img src=\"/spinner.svg\" alt=\"\">\n        <p>Please wait, we're hitting our servers!</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import {postFormToDB} from '../api'\n  import FormPlanPicker from './FormPlanPicker'\n  import FormUserDetails from './FormUserDetails'\n  import FormAddress from './FormAddress'\n  import FormReviewOrder from './FormReviewOrder'\n\n  export default {\n    name: 'FormWizard',\n    components: {\n      FormPlanPicker,\n      FormUserDetails,\n      FormAddress,\n      FormReviewOrder\n    },\n    data () {\n      return {\n        currentStepNumber: 1,\n        canGoNext: false,\n        asyncState: null,\n        steps: [\n          'FormPlanPicker',\n          'FormUserDetails',\n          'FormAddress',\n          'FormReviewOrder'\n        ],\n        form: {\n          plan: null,\n          email: null,\n          name: null,\n          password: null,\n          address: null,\n          recipient: null,\n          chocolate: false,\n          otherTreat: false\n        }\n      }\n    },\n    computed: {\n      isLastStep () {\n        return this.currentStepNumber === this.length\n      },\n      wizardInProgress () {\n        return this.currentStepNumber <= this.length\n      },\n      length () {\n        return this.steps.length\n      },\n      currentStep () {\n        return this.steps[this.currentStepNumber - 1]\n      },\n      progress () {\n        return this.currentStepNumber/this.length * 100\n      }\n    },\n    methods: {\n      submitOrder () {\n        this.asyncState = 'pending'\n        postFormToDB(this.form)\n                .then(() => {\n                  console.log('form submitted', this.form)\n                  this.asyncState = 'success'\n                  this.currentStepNumber++\n                })\n      },\n      nextButtonAction () {\n        if (this.isLastStep) {\n          this.submitOrder()\n        } else {\n          this.goNext()\n        }\n      },\n      processStep (step) {\n        Object.assign(this.form, step.data)\n        this.canGoNext = step.valid\n      },\n      goBack () {\n        this.currentStepNumber--\n        this.canGoNext = true\n      },\n      goNext () {\n        this.currentStepNumber++\n        // this.canGoNext = false\n        this.$nextTick(() => {\n          this.canGoNext = !this.$refs.currentStep.$v.$invalid\n        })\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/components"}]}